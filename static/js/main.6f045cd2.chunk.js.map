{"version":3,"sources":["img/heart.svg","img/Vector.svg","components/Header/Header.js","components/Joke/Joke.js","components/RadioButton/RadioButton.js","utils/api.js","containers/Main/Main.js","components/FavoriteHeader/FavoriteHeader.js","components/FavoriteJoke/FavoriteJoke.js","containers/Favorite/Favorite.js","App.js","actions/actionCreator.js","utils/constants.js","serviceWorker.js","reducers/favorite.js","store.js","reducers/index.js","index.js"],"names":["module","exports","Header","handlerMenu","className","onClick","Joke","state","inFavorite","this","props","joke","favoriteJokes","id","icon_url","url","value","updated_at","addJokeToFavorite","deleteJokeToFavorite","setState","src","find","item","like","no_like","alt","href","Math","round","Date","now","categories","Component","defaultProps","RadioButton","name","handelRadio","onChange","type","API_URL","RADIOBUTTON","btnCategories","Main","jokes","searchType","query","warn","fetchJokes","fetch","then","data","json","total","result","alert","catch","err","handelSubmit","e","preventDefault","includes","handelInput","target","length","handelCategoriesLi","buttons","document","querySelectorAll","i","l","classList","contains","remove","getAttribute","add","querySelector","setAttribute","menu","onSubmit","map","btn","key","placeholder","autoFocus","style","FavoriteHeader","FavoriteJoke","Favorite","isFavoriteExist","App","prevState","favorite","removeJoke","addJoke","connect","Boolean","window","location","hostname","match","JOKES","load","namespace","preloadedState","filter","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.6f045cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.0865c832.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vector.e977fb9e.svg\";","import React from \"react\";\r\nimport './Header.css';\r\n\r\nconst Header = ({handlerMenu}) => {\r\n    return (\r\n        <div className='Header'>\r\n            <header className=\"header\">\r\n                <p className=\"logo\">MSI 2020</p>\r\n                <div onClick={handlerMenu} className=\"like__burger_open\">\r\n                    <p className=\"favorite\">Favorite</p>\r\n                </div>\r\n            </header>\r\n            <section className=\"intro\">\r\n                <h2>Hey!</h2>\r\n                <h1 className=\"intro-title\">Letâ€™s try to find a joke for you:</h1>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport './Joke.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nimport like from \"../../img/heart.svg\";\r\nimport no_like from \"../../img/Vector.svg\";\r\n\r\nclass Joke extends Component {\r\n    state = {\r\n        inFavorite: false,\r\n    }\r\n\r\n    render() {\r\n        const {inFavorite} = this.state;\r\n        const {\r\n            joke,\r\n            favoriteJokes,\r\n            id,\r\n            icon_url,\r\n            url,\r\n            value,\r\n            updated_at,\r\n            addJokeToFavorite,\r\n            deleteJokeToFavorite,\r\n        } = this.props;\r\n        return (\r\n            <div className=\"Joke\">\r\n                <div className=\"joke-container\">\r\n                    {inFavorite ?\r\n                        <img\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    inFavorite: false,\r\n                                })\r\n                                deleteJokeToFavorite(id);\r\n                            }}\r\n                            className=\"joke-like\"\r\n                            src={favoriteJokes.find(item => item.id === id) ? like : no_like}\r\n                            alt=\"joke-like\"/> :\r\n                        <img\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    inFavorite: true,\r\n                                })\r\n                                addJokeToFavorite(\r\n                                    id,\r\n                                    icon_url,\r\n                                    url,\r\n                                    value,\r\n                                    updated_at,\r\n                                    deleteJokeToFavorite\r\n                                );\r\n                            }}\r\n                            className=\"joke-like\"\r\n                            src={favoriteJokes.find(item => item.id === id) ? like : no_like}\r\n                            alt=\"joke-like\"/>\r\n                    }\r\n                    <img className=\"joke-icon\" src={icon_url} alt=\"joke-icon\"/>\r\n                    <div className=\"joke-container-article\">\r\n                        <a className=\"joke-id\" href={url}>\r\n                            ID: {id}\r\n                        </a>\r\n                        <article>{value}</article>\r\n                        <div className=\"joke-info\">\r\n                            <p className=\"joke-update\">Last\r\n                                update: {Math.round((Date.now() - new Date(updated_at)) / 3600000)} hours ago</p>\r\n                            {joke.categories[0] && <span className=\"joke-category\">{joke.categories[0]}</span>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nJoke.propTypes = {\r\n    joke:PropTypes.object,\r\n    favoriteJokes:PropTypes.array,\r\n    addJokeToFavorite: PropTypes.func,\r\n    deleteJokeToFavorite: PropTypes.func,\r\n    id:PropTypes.string,\r\n    icon_url:PropTypes.string,\r\n    url:PropTypes.string,\r\n    value:PropTypes.string,\r\n    updated_at:PropTypes.string,\r\n};\r\n\r\nJoke.defaultProps = {\r\n    joke: {},\r\n    favoriteJokes:[],\r\n    id:'',\r\n    icon_url:'',\r\n    url:'',\r\n    value:'',\r\n    updated_at:'',\r\n    addJokeToFavorite: () => {\r\n    },\r\n    deleteJokeToFavorite: () => {\r\n    },\r\n};\r\nexport default Joke;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./RadioButton.css\";\r\n\r\nconst RadioButton = ({name, handelRadio, value}) => {\r\n    return (\r\n        <label className=\"RadioButton\">\r\n            {name}\r\n            <input onChange={() => handelRadio(value)} name=\"search-type\" value={value} type=\"radio\"/>\r\n            <span></span>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\nRadioButton.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    handelRadio: PropTypes.func,\r\n};\r\n\r\nRadioButton.defaultProps = {\r\n    name: '',\r\n    value: '',\r\n    handelRadio: () => {\r\n    },\r\n};\r\n\r\nexport default RadioButton;","export const API_URL = \"https://api.chucknorris.io/jokes/\";\r\nexport const RANDOM_PARAM = \"random\";\r\nexport const CATEGORY_PARAM = \"random?category=\";\r\nexport const QUERY_PARAM = \"search?query=\";\r\n\r\n// Use Chuck Norris API to get jokes in JSON format - https://api.chucknorris.io/\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './Main.css';\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Joke from \"../../components/Joke/Joke\";\r\nimport RadioButton from \"../../components/RadioButton/RadioButton\";\r\nimport {API_URL, RANDOM_PARAM, CATEGORY_PARAM, QUERY_PARAM} from \"../../utils/api\";\r\n\r\nconst RADIOBUTTON = [\r\n    {\r\n        name: \"Random\",\r\n        value: RANDOM_PARAM,\r\n    },\r\n    {\r\n        name: \"From categories\",\r\n        value: CATEGORY_PARAM,\r\n    },\r\n    {\r\n        name: \"Search\",\r\n        value: QUERY_PARAM,\r\n    },\r\n];\r\n\r\nconst btnCategories = ['animal', 'career', 'celebrity', 'dev'];\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        jokes: [],\r\n        searchType: RANDOM_PARAM,\r\n        query: '',\r\n        warn: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchJokes(this.state.searchType, this.state.query);\r\n        document.querySelector(`input[value=${RANDOM_PARAM}]`).setAttribute(\"checked\", \"true\");\r\n    };\r\n\r\n\r\n    fetchJokes = (searchType, query) => {\r\n        fetch(`${API_URL}${searchType}${query}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                (searchType === RANDOM_PARAM || searchType === CATEGORY_PARAM )&&\r\n                this.setState({jokes: [data, ...this.state.jokes]});\r\n\r\n\r\n                searchType === QUERY_PARAM &&\r\n                data.total !== 0 &&\r\n                this.setState({jokes: data.result});\r\n\r\n                searchType === QUERY_PARAM &&\r\n                data.total === 0 &&\r\n                alert(\"Chuck doesn't know jokes with your word.\");\r\n\r\n            })\r\n            .catch(err => err)\r\n    };\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.searchType === CATEGORY_PARAM &&\r\n            !btnCategories.includes(this.state.query)) {\r\n            alert(\"Please select a category.\");\r\n        }else if (this.state.searchType === QUERY_PARAM &&\r\n            this.state.query === \"\") {\r\n            alert(\"You enter incorrect value\");\r\n        }else {\r\n            this.fetchJokes(this.state.searchType, this.state.query);\r\n        }\r\n    };\r\n\r\n\r\n    handelRadio = (searchType) => {\r\n        this.setState({query: '', searchType: searchType});\r\n    };\r\n\r\n    handelInput = ({target: {value}}) => {\r\n        value.length >= 3 && value.length <= 120 ?\r\n            this.setState({query: value, warn: false}) :\r\n            this.setState({warn: true});\r\n    };\r\n\r\n    handelCategoriesLi = (e) => {\r\n        const buttons = document.querySelectorAll(\".btn-categories\");\r\n        for (let i = 0, l = buttons.length; i < l; i++) {\r\n            buttons[i].classList.contains(\"active\") && buttons[i].classList.remove(\"active\");\r\n        }\r\n\r\n        this.setState({query: e.target.getAttribute('value')});\r\n\r\n        e.target.classList.add(\"active\");\r\n    };\r\n\r\n\r\n    render() {\r\n        const {\r\n            searchType,\r\n            jokes,\r\n            warn,\r\n        } = this.state;\r\n        const {\r\n            menu,\r\n            handlerMenu,\r\n            favoriteJokes,\r\n            addJokeToFavorite,\r\n            deleteJokeToFavorite,\r\n        } = this.props;\r\n        return (\r\n            <div className={menu ? \"Main Main__disable\" : \"Main\"}>\r\n                <div className=\"jokes-wrapper\">\r\n                    <Header handlerMenu={handlerMenu}/>\r\n\r\n                    <form onSubmit={this.handelSubmit} className=\"search-form\">\r\n                        <fieldset className=\"search-form__wrap\">\r\n                            <div className=\"search-form__info\">\r\n\r\n                                {/*Ability to get a random joke*/}\r\n                                <RadioButton name={RADIOBUTTON[0].name}\r\n                                             handelRadio={this.handelRadio}\r\n                                             value={RADIOBUTTON[0].value}/>\r\n\r\n\r\n                                {/*Ability to get a random joke from categories (Use API to get all available categories).*/}\r\n                                <RadioButton name={RADIOBUTTON[1].name}\r\n                                             handelRadio={this.handelRadio}\r\n                                             value={RADIOBUTTON[1].value}/>\r\n\r\n                                {searchType === RADIOBUTTON[1].value &&\r\n                                <ul className=\"categories__checked\">\r\n                                    {btnCategories.map((btn, key) =>\r\n                                        <li onClick={this.handelCategoriesLi}\r\n                                            className=\"btn-categories\"\r\n                                            value={btn}\r\n                                            key={key}>{btn}</li>\r\n                                    )}\r\n                                </ul>}\r\n\r\n\r\n                                {/*Ability to get jokes by free text search.*/}\r\n                                <RadioButton name={RADIOBUTTON[2].name}\r\n                                             handelRadio={this.handelRadio}\r\n                                             value={RADIOBUTTON[2].value}/>\r\n\r\n                                {searchType === RADIOBUTTON[2].value &&\r\n                                <div className=\"search__checked\">\r\n                                    <input onChange={this.handelInput}\r\n                                           className=\"search__checked__query\"\r\n                                           type=\"text\"\r\n                                           placeholder=\"Free text search...\"\r\n                                           autoFocus={true}/>\r\n                                    {warn &&\r\n                                    <p style={{\"color\": \"red\"}}>The query should be between 3 and 120 characters\r\n                                        long.</p>}\r\n                                </div>}\r\n\r\n\r\n                                <button className=\"btn-submit\" type=\"submit\">Get a joke</button>\r\n\r\n                            </div>\r\n                        </fieldset>\r\n                    </form>\r\n\r\n                    <section className=\"jokes\">\r\n                        {jokes.map(joke =>\r\n                            <Joke\r\n                                joke={joke}\r\n                                favoriteJokes={favoriteJokes}\r\n                                addJokeToFavorite={addJokeToFavorite}\r\n                                deleteJokeToFavorite={deleteJokeToFavorite}\r\n                                id={joke.id}\r\n                                icon_url={joke.icon_url}\r\n                                url={joke.url}\r\n                                value={joke.value}\r\n                                updated_at={joke.updated_at}\r\n                                key={joke.id}\r\n                            />)}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport './FavoriteHeader.css';\r\n\r\nconst FavoriteHeader = ({handlerMenu}) => {\r\n    return (\r\n        <header className=\"FavoriteHeader\">\r\n            <p className=\"favorite-title favorite\">Favorite</p>\r\n            <div onClick={handlerMenu} className=\"like__burger_close\">\r\n                <p className=\"favorite\">Favorite</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default FavoriteHeader;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './FavoriteJoke.css';\r\n\r\nimport like from \"../../img/heart.svg\";\r\n\r\nconst FavoriteJoke = ({\r\n                          deleteJokeToFavorite,\r\n                          id,\r\n                          icon_url,\r\n                          url,\r\n                          value,\r\n                          updated_at\r\n                      }) => {\r\n    return (\r\n        <div className=\"FavoriteJoke\">\r\n            <img onClick={() => deleteJokeToFavorite(id)}\r\n                 className=\"favorite-joke-like\"\r\n                 src={like}\r\n                 alt=\"joke-like\"/>\r\n            <img className=\"favorite-joke-icon\" src={icon_url} alt=\"joke-icon\"/>\r\n            <div className=\"favorite-joke-container-article\">\r\n                <a className=\"favorite-joke-id\" href={url}>\r\n                    ID: {id}\r\n                </a>\r\n                <article>{value}</article>\r\n                <p className=\"favorite-joke-update\">Last\r\n                    update: {Math.round((Date.now() - new Date(updated_at)) / 3600000)} hours ago</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFavoriteJoke.propTypes = {\r\n    deleteJokeToFavorite: PropTypes.func,\r\n    id:PropTypes.string,\r\n    icon_url:PropTypes.string,\r\n    url:PropTypes.string,\r\n    value:PropTypes.string,\r\n    updated_at:PropTypes.string,\r\n};\r\n\r\nFavoriteJoke.defaultProps = {\r\n    id:'',\r\n    icon_url:'',\r\n    url:'',\r\n    value:'',\r\n    updated_at:'',\r\n    deleteJokeToFavorite: () => {\r\n    },\r\n};\r\n\r\nexport default FavoriteJoke;","import React from \"react\";\r\nimport './Favorite.css';\r\n\r\nimport FavoriteHeader from \"../../components/FavoriteHeader/FavoriteHeader\";\r\nimport FavoriteJoke from \"../../components/FavoriteJoke/FavoriteJoke\";\r\n\r\nconst Favorite = ({\r\n                      isFavoriteExist,\r\n                      menu,\r\n                      handlerMenu,\r\n                      favoriteJokes,\r\n                      deleteJokeToFavorite,\r\n                  }) => {\r\n\r\n    return (\r\n        <div className={menu ? \"Favorite Favorite__active\" : \"Favorite\"}>\r\n            <div className=\"jokes-wrapper\">\r\n                <FavoriteHeader handlerMenu={handlerMenu}/>\r\n                {isFavoriteExist && <div className=\"favorite-joke-container\">\r\n                    {favoriteJokes.map(joke =>\r\n                        <FavoriteJoke\r\n                            deleteJokeToFavorite={deleteJokeToFavorite}\r\n                            key={joke.id}\r\n                            id={joke.id}\r\n                            icon_url={joke.icon_url}\r\n                            url={joke.url}\r\n                            value={joke.value}\r\n                            updated_at={joke.updated_at}\r\n                        />)}\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, {Fragment, Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport {addJoke, removeJoke} from \"./actions/actionCreator\";\n\nimport Main from \"./containers/Main/Main\";\nimport Favorite from \"./containers/Favorite/Favorite\";\n\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        menu: false,\n    }\n\n    handlerMenu = () => {\n        this.setState((prevState, props) => {\n            return ({menu: !prevState.menu})\n        })\n    };\n\n    render() {\n        const {menu} = this.state;\n        const {favorite, removeJoke,addJoke} = this.props;\n        const isFavoriteExist = favorite && favorite.length > 0;\n        return (\n            <Fragment>\n                <div className=\"App\">\n                    <Main\n                        addJokeToFavorite={addJoke}\n                        deleteJokeToFavorite={removeJoke}\n                        favoriteJokes={favorite}\n                        menu={menu}\n                        handlerMenu={this.handlerMenu}\n                    />\n                    <Favorite\n                        isFavoriteExist={isFavoriteExist}\n                        deleteJokeToFavorite={removeJoke}\n                        favoriteJokes={favorite}\n                        menu={menu}\n                        handlerMenu={this.handlerMenu}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(({favorite}) => ({\n    favorite,\n}), {addJoke, removeJoke})(App);\n","import {ADD_JOKE, REMOVE_JOKE} from '../utils/constants';\r\n\r\n//Any joke can be marked/unmarked as favourite.\r\nexport const addJoke = (id,\r\n                        icon_url,\r\n                        url,\r\n                        value,\r\n                        updated_at,\r\n                        deleteJokeToFavorite) => ({\r\n    type: ADD_JOKE,\r\n    id,\r\n    icon_url,\r\n    url,\r\n    value,\r\n    updated_at,\r\n    deleteJokeToFavorite\r\n});\r\n\r\n\r\nexport const removeJoke = id => ({\r\n    type: REMOVE_JOKE,\r\n    id\r\n});","export const ADD_JOKE = 'ADD_JOKE';\r\nexport const REMOVE_JOKE = 'REMOVE_JOKE';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ADD_JOKE, REMOVE_JOKE} from '../utils/constants';\r\nimport {load} from \"redux-localstorage-simple\";\r\n\r\nlet JOKES = load({namespace: 'favorite-joke-container'});\r\n\r\nif (!JOKES || !JOKES.favorite || !JOKES.favorite.length) {\r\n    JOKES = {\r\n        favorite: [],\r\n    }\r\n}\r\n\r\nconst favorite = (state = JOKES.favorite, {\r\n    id,\r\n    icon_url,\r\n    url,\r\n    value,\r\n    updated_at,\r\n    deleteJokeToFavorite,\r\n    type\r\n}) => {\r\n    switch (type) {\r\n        case ADD_JOKE:\r\n            return [\r\n                 {\r\n                    id,\r\n                    icon_url,\r\n                    url,\r\n                    value,\r\n                    updated_at,\r\n                    deleteJokeToFavorite\r\n                },...state\r\n            ];\r\n        case  REMOVE_JOKE:\r\n            return [...state].filter(joke => joke.id !== id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default favorite;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport {save} from 'redux-localstorage-simple';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n    createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(\r\n            applyMiddleware(save({namespace: 'favorite-joke-container'})) //Jokes marked as favourite should appear in the right section Favourite.\r\n        ),\r\n    )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","import {combineReducers} from 'redux';\r\nimport favorite from \"./favorite\";\r\n\r\n//Favourite jokes should be available after reloading the page and stored in the browser (No need to use Back-end).\r\n\r\nconst rootReducer = combineReducers({favorite});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}